Things that need done:
-add settings menu
-add unit return(a list of units that you keep through battles)
-Add hashtables for checking mod integrety.(will only be used in multiplayer)
-add sound stuff(like attack sounds, maybe some bacround music or something)
--use lua to run custom scripts on maps
-add bountys to unit based on kills/lvl

-- learn how to code // Monin

/////////////////////////////////////////// tyrone is Currently working on:
/////////////////////////////////////////// spell book system

/////////////////////////////////////////// Monin is currently working on:
/////////////////////////////////////////// Settings menue and settings

-Multiplayer?
-What to do here?
option are:
-Set up server.
-look into steam api for fighting friends
-think i need both. or need to add a friend system to the server?
-Or see if steam has a all users online thingy

-Look into steam stuff that would be needed, like workshop and stuff.

Features to add later
-different terrain like mountains (give something like longer sight range or something)
-add ports and boats, start with carrier and attack boat?
-Add building of walls/city managment (City managment could be done at any time, but will not go into affect tell your next turn)(have builder units for this?)
-add other reasorces
-add tech trees
-add overworld map/gameplay
-add campain editor and some sort of scripting


Bugs:


- have trigger property to stuff? And a string to define what the trigger is?
EX. grass-trigger:occupied,Conditions:Unit type:Malita, Event:Add gold to units team
trigger:true
TriggeringEvent:Occupied
Condition:type = unit
condition:unit = milita
Event:Add Gold to (unit.team.gold)

Create Seperate script to handle in game scripting

Thoughts
-Have all client side data pulled from json files, and use server to keep integrity through pvp.
--will need to use some seralization for things like hero stats, that way player cant edit them, and then server can use them to check make sure they are not cheating.
settings notes
-disable info popup
-KeyBindings




--spell stuff
-hide spell button unless hero is selected
-highlight units in range when spell is selected
-add mana and mana regen
-


                                            code from line 734 in game controller script, dont think its needed, here just in case it is

                                    else if (hit.transform.tag == DBC.TerrainDictionary[0].Type || hit.transform.tag == DBC.BuildingDictionary[0].Type) //is the hit a terrain or building?
                                    {
                                        ////Debug.log("Building or terrain hit");
                                        if (SelectedUnitPlayScene != null)
                                        {
                                            UnitController UC = SelectedUnitPlayScene.GetComponent<UnitController>();
                                            if (hit.transform.position != SelectedUnitPlayScene.transform.position) //is the building or terrain not the one the unit is standing on?
                                            {
                                                if (!UnitPos.ContainsKey(hit.transform.position) && SelectedUnitPlayScene.transform.GetComponent<UnitController>().TilesWeights.ContainsKey(hit.transform.position)) //there a unit there already?
                                                {
                                                    if (UC.UnitMovable) //has unit been moved yet?
                                                    {
                                                        MoveToPosition = hit.transform.position; //get position we want to move to
                                                        PSCC.MoveButton.SetActive(true);
                                                    }
                                                }
                                                else if (!SelectedUnitPlayScene.transform.GetComponent<UnitController>().TilesWeights.ContainsKey(hit.transform.position))
                                                {

                                                }
                                            }
                                        }
                                    }